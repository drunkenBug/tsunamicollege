{"remainingRequest":"/home/fiero/fun/github_pages/bequally.1/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/fiero/fun/github_pages/bequally.1/src/views/Test.vue?vue&type=style&index=0&id=12240dd3&lang=css","dependencies":[{"path":"/home/fiero/fun/github_pages/bequally.1/src/views/Test.vue","mtime":1613820546325},{"path":"/home/fiero/fun/github_pages/bequally.1/node_modules/css-loader/dist/cjs.js","mtime":1612047698210},{"path":"/home/fiero/fun/github_pages/bequally.1/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1612047697902},{"path":"/home/fiero/fun/github_pages/bequally.1/node_modules/postcss-loader/src/index.js","mtime":1612047698366},{"path":"/home/fiero/fun/github_pages/bequally.1/node_modules/cache-loader/dist/cjs.js","mtime":1612047698358},{"path":"/home/fiero/fun/github_pages/bequally.1/node_modules/vue-loader-v16/dist/index.js","mtime":1612047697898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLm5leHR7CiAgICBwYWRkaW5nOjFyZW07CiAgfQo="},{"version":3,"sources":["/home/fiero/fun/github_pages/bequally.1/src/views/Test.vue"],"names":[],"mappings":";EAmDE,CAAC,CAAC,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd","file":"/home/fiero/fun/github_pages/bequally.1/src/views/Test.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"test\">\n    <h1>The Entrance Test</h1>\n    <div v-if=\"questionsLoaded\">\n      <Question :content=\"questions[index]\" ref=\"question\" @solved=\"solved\"/>\n    </div>\n    <div class=\"next\">\n      <button type=\"button\" ref=\"next\" @click =\"next\">next</button>\n    </div>\n  </div>\n\n\n</template>\n\n<script>\nimport Question from '../components/Question.vue'\n\nexport default {\n  name: 'Test',\n  components: {\n    Question\n  },\n  data(){\n    return {\n      questionsLoaded:false,\n      questions:[{}],\n      data:[],\n      index:0,\n\n    }\n  },\n  mounted(){\n    fetch('http://127.0.0.1:3000/questions.json')\n    .then(res => res.json())\n    .then(data => this.questions = data,\n    this.questionsLoaded=true,\n  )\n    .catch(err=>console.log(err.message))\n  },\n  methods:{\n    solved(){\n      this.$refs.next.focus()\n    },\n    next(){\n      this.index=this.index+1,\n      this.$refs.question.start()\n    }\n  }\n}\n</script>\n<style>\n  .next{\n    padding:1rem;\n  }\n</style>\n"]}]}
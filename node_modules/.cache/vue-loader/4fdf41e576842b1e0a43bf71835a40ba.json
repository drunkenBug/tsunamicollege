{"remainingRequest":"/home/fiero/fun/tsunamicollege/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/fiero/fun/tsunamicollege/src/components/Question.vue?vue&type=style&index=0&id=381a60a6&lang=css","dependencies":[{"path":"/home/fiero/fun/tsunamicollege/src/components/Question.vue","mtime":1614111920968},{"path":"/home/fiero/fun/tsunamicollege/node_modules/css-loader/dist/cjs.js","mtime":1612047698210},{"path":"/home/fiero/fun/tsunamicollege/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1612047697902},{"path":"/home/fiero/fun/tsunamicollege/node_modules/postcss-loader/src/index.js","mtime":1612047698366},{"path":"/home/fiero/fun/tsunamicollege/node_modules/cache-loader/dist/cjs.js","mtime":1612047698358},{"path":"/home/fiero/fun/tsunamicollege/node_modules/vue-loader-v16/dist/index.js","mtime":1612047697898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmJsb2NrewogICAgYmFja2dyb3VuZDogd2hpdGU7CiAgICBwb3NpdGlvbjpyZWxhdGl2ZTsKICAgIGxlZnQ6NTAlOwogICAgdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLDApOwogICAgcGFkZGluZzoycmVtOwogICAgYm9yZGVyLXJhZGl1czoycmVtOwogIH0KCgo="},{"version":3,"sources":["/home/fiero/fun/tsunamicollege/src/components/Question.vue"],"names":[],"mappings":";EAwDE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB","file":"/home/fiero/fun/tsunamicollege/src/components/Question.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"block\">\n    <div class=\"question\">\n      <h2>{{content.title}}</h2>\n      <input type=\"text\" v-model='input' ref=\"input\" @keyup.enter='onEnter'>\n      <button type=\"button\" name=\"button\" @click='go' >\n        <div class=\"go\">\n          GO\n        </div>\n      </button>\n      <p>{{result}}</p>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  export default{\n    props:[\n      'content',\n    ],\n    data(){\n      return {\n        result:\"...\",\n        input:\"\"\n      }\n    },\n    methods:{\n      go(){\n        if (this.input==\"\"){\n          return\n        }\n        if (this.input==this.content.solution){\n          this.result=this.content.solution+\" is correct!\"\n          this.input=\"\"\n          this.$emit('solved')\n        }else{\n          this.result=\"false!\"\n        }\n      },\n      onEnter(){\n        console.log(\"enter\")\n        this.go()\n      },\n      start(){\n        this.$refs.input.focus()\n        this.result=\"...\"\n      }\n    },\n    created(){\n      console.log(\"created\")\n    }\n  }\n</script>\n\n<style>\n  .block{\n    background: white;\n    position:relative;\n    left:50%;\n    transform:translate(-50%,0);\n    padding:2rem;\n    border-radius:2rem;\n  }\n\n\n</style>\n"]}]}
{"remainingRequest":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/babel-loader/lib/index.js!/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/guiseppe/fun/online/tsunamicollege/frontend/src/views/Test.vue?vue&type=template&id=5b2d5ecc","dependencies":[{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/src/views/Test.vue","mtime":1619558640787},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1616415317878},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/babel-loader/lib/index.js","mtime":1616415317834},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616415319211},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1616415317878},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1616415319210}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogInRlc3QiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGtleTogMAp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogIm5leHQiCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfUXVlc3Rpb24gPSBfcmVzb2x2ZUNvbXBvbmVudCgiUXVlc3Rpb24iKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKCJoMSIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEudG9waWMpLCAxCiAgLyogVEVYVCAqLwogICksICRkYXRhLnF1ZXN0aW9uc0xvYWRlZCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMiwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X1F1ZXN0aW9uLCB7CiAgICBjb250ZW50OiAkZGF0YS5xdWVzdGlvbiwKICAgIHJlZjogInF1ZXN0aW9uIiwKICAgIG9uRmFpbGVkOiAkb3B0aW9ucy5mYWlsZWQsCiAgICBvblNvbHZlZDogJG9wdGlvbnMuc29sdmVkCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbImNvbnRlbnQiLCAib25GYWlsZWQiLCAib25Tb2x2ZWQiXSldKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMywgW19jcmVhdGVWTm9kZSgiYnV0dG9uIiwgewogICAgY2xhc3M6ICJ0ZXN0IiwKICAgIHR5cGU6ICJidXR0b24iLAogICAgcmVmOiAibmV4dCIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLm5leHQgJiYgJG9wdGlvbnMubmV4dC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIm5leHQiLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKV0pXSk7Cn0="},{"version":3,"sources":["/Users/guiseppe/fun/online/tsunamicollege/frontend/src/views/Test.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;;;;AAKJ,EAAA,KAAK,EAAC;;;;;uBALb,YAAA,CAQM,KARN,EAAA,UAAA,EAQM,CAPJ,YAAA,CAAkB,IAAlB,EAAkB,IAAlB,EAAkB,gBAAA,CAAZ,KAAA,CAAA,KAAY,CAAlB,EAAW;AAAA;AAAX,GAOI,EANO,KAAA,CAAA,e,kBAAX,YAAA,CAEM,KAFN,EAEM,UAFN,EAEM,CADJ,YAAA,CAAgF,mBAAhF,EAAgF;AAArE,IAAA,OAAO,EAAE,KAAA,CAAA,QAA4D;AAAlD,IAAA,GAAG,EAAC,UAA8C;AAAlC,IAAA,QAAM,EAAE,QAAA,CAAA,MAA0B;AAAjB,IAAA,QAAM,EAAE,QAAA,CAAA;AAAS,GAAhF,E,IAAA,E;;AAAA,I,mCAAA,CACI,CAFN,C,qCAMI,EAHJ,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADJ,YAAA,CAA0E,QAA1E,EAA0E;AAAlE,IAAA,KAAK,EAAC,MAA4D;AAArD,IAAA,IAAI,EAAC,QAAgD;AAAvC,IAAA,GAAG,EAAC,MAAmC;AAA3B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAG,QAAA,CAAA,IAAA,IAAA,QAAA,CAAA,IAAA,OAAA,QAAA,YAAH;AAAA,KAAA;AAAsB,GAA1E,EAA6D,MAA7D,EAAiE;AAAA;AAAjE,GACI,CAFN,CAGI,CARN,C","sourcesContent":["<template>\n  <div class=\"test\">\n    <h1>{{topic}}</h1>\n    <div v-if=\"questionsLoaded\">\n      <Question :content=\"question\" ref=\"question\" @failed=\"failed\" @solved=\"solved\"/>\n    </div>\n    <div class=\"next\">\n      <button class=\"test\" type=\"button\" ref=\"next\" @click =\"next\">next</button>\n    </div>\n  </div>\n\n\n</template>\n\n<script>\nimport Question from '../components/Question.vue'\nimport axios from 'axios'\nexport default {\n  name: 'Test',\n  components: {\n    Question\n  },\n  data(){\n    return {\n      questionsLoaded:false,\n      question:{},\n      data:[],\n      index:1,\n      topic:this.$route.params.id,\n\n      hist:[-1],\n      hakuna:[1],\n\n      diffscale:0.2,//how much does the difference in difficulty get accounted for\n      reward:1,\n      penalty:0.8,\n\n    }\n  },\n  mounted(){\n    console.log('hakuna: ',JSON.stringify(this.hakuna));\n    if (localStorage[this.topic]==null){\n      console.log(\"no data on topic \",this.topic);\n      localStorage[this.topic]=0\n    }else{\n      console.log(localStorage[this.topic])\n    }\n    console.log(\"skill level:\",localStorage[this.topic]);\n    var rating=Math.round(localStorage[this.topic])\n    console.log('hist: ',this.hist);\n    this.getNewQuestion(this.topic,rating,this.hist)\n  },\n  methods:{\n\n    getTopicInfo(topic){\n      var data={\"op\":\"GETINFO\",\"topic\":topic,\"no\":0}\n      axios({method:\"POST\",url:\"/api/getTopicInfo\",data:data,headers:{\"content-type\":\"text/plain\"}}).then(result=>{\n        localStorage[topic+\"Info\"]=JSON.stringify(result.data);\n      })\n    },\n\n    getNewQuestion(topic,rating,history){\n      console.log(history);\n      console.log('sendign history: ',this.hist);\n      var data={'topic':topic,'rating':rating,'history':this.hakuna}\n      console.log('sending data:',data);\n      axios({method:'POST',url:'api/new',data:data,headers:{'content-type':'text/plain'}}).then(result =>{\n        this.question=result.data\n        this.questionsLoaded=true\n        console.log('receved question:',this.question);\n\n      }).catch(error=>{\n        console.log(error);\n      })\n    },\n    solved(){\n      console.log(\"difficulty:\",this.question.rating);\n      this.rating=parseFloat(localStorage[this.topic])\n      console.log(\"start rating:\",this.rating);\n      var difference=this.question.rating-this.rating\n      var change = Math.max(0,this.reward+difference*this.diffscale)\n      this.rating+=change\n      localStorage[this.topic]=this.rating\n      console.log(\"new rating\",this.rating);\n      this.$refs.next.focus()\n\n\n    },\n    failed(){\n      console.log('failed');\n      console.log('difficulty:',this.question.rating);\n      this.rating=parseFloat(localStorage[this.topic])\n      console.log('start rating:',this.rating);\n      var difference=this.question.rating=this.rating\n      var change = Math.max(0,this.penalty+difference*this.diffscale)\n      this.rating-=change\n      localStorage[this.topic]=this.rating\n      console.log('new rating:',this.rating);\n      this.$refs.next.focus()\n\n    },\n    resetSkill(){\n      localStorage[this.topic]=0\n    },\n\n\n    next(){\n      console.log(\"question:\", this.question);\n      console.log(\"id:\",this.question.id);\n      this.hist.push(this.question.id)\n      if (this.hist.length>10){\n        this.hist=this.hist.slice(-10)\n      }\n      console.log(\"history:\",this.hist);\n\n      console.log(\"skill level:\",localStorage[this.topic]);\n      var rating=Math.round(localStorage[this.topic])\n      // var hist = JSON.stringify(this.hist)\n      this.getNewQuestion(this.topic,rating,this.hist)\n      this.$refs.question.start()\n    },\n\n  }\n}\n</script>\n"],"sourceRoot":""}]}
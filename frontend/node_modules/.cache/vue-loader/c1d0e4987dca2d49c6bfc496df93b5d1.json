{"remainingRequest":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/guiseppe/fun/online/tsunamicollege/frontend/src/components/Question.vue?vue&type=style&index=0&id=1d8df916&media=screen&lang=css","dependencies":[{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/src/components/Question.vue","mtime":1618163282663},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/css-loader/dist/cjs.js","mtime":1616415318065},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616415319211},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/postcss-loader/src/index.js","mtime":1616415318629},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1616415317878},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1616415319210}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW5wdXR7CiAgICBib3JkZXItcmFkaXVzOiAxcmVtOwogICAgYm9yZGVyOjFyZW07CiAgICAvKiBwYWRkaW5nOjFyZW07ICovCiAgfQoK"},{"version":3,"sources":["/Users/guiseppe/fun/online/tsunamicollege/frontend/src/components/Question.vue"],"names":[],"mappings":";EAuDE,CAAC,CAAC,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACpB","file":"/Users/guiseppe/fun/online/tsunamicollege/frontend/src/components/Question.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"scrollbox\">\n    <div class=\"question\">\n      <h2>{{content.title}}</h2>\n      <input class=\"test\" type=\"text\" v-model='input' ref=\"input\" @keyup.enter='onEnter'>\n      <button class=\"test\" type=\"button\" name=\"button\" @click='go' >\n        <div class=\"go\">\n          GO\n        </div>\n      </button>\n      <p>{{result}}</p>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  export default{\n    props:[\n      'content',\n    ],\n    data(){\n      return {\n        result:\"...\",\n        input:\"\"\n      }\n    },\n    methods:{\n      go(){\n        if (this.input==\"\"){\n          return\n        }\n        if (this.input==this.content.solution){\n          this.result=this.content.solution+\" is correct!\"\n          this.input=\"\"\n          this.$emit('solved')\n        }else{\n          this.result=\"false!\"\n        }\n      },\n      onEnter(){\n        console.log(\"enter\")\n        this.go()\n      },\n      start(){\n        this.$refs.input.focus()\n        this.result=\"...\"\n      }\n    },\n    created(){\n      console.log(\"created\")\n    }\n  }\n</script>\n<style media=\"screen\">\n  input{\n    border-radius: 1rem;\n    border:1rem;\n    /* padding:1rem; */\n  }\n\n</style>\n"]}]}
{"remainingRequest":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/babel-loader/lib/index.js!/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/guiseppe/fun/online/tsunamicollege/frontend/src/views/Test.vue?vue&type=template&id=5b2d5ecc","dependencies":[{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/src/views/Test.vue","mtime":1620226342631},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1616415317878},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/babel-loader/lib/index.js","mtime":1616415317834},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616415319211},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1616415317878},{"path":"/Users/guiseppe/fun/online/tsunamicollege/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1616415319210}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jayB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAidGVzdCIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiZmFjZS1pbWFnZSIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJmYWNlIgp9LCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNCA9IHsKICBrZXk6IDAKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9RdWVzdGlvbiA9IF9yZXNvbHZlQ29tcG9uZW50KCJRdWVzdGlvbiIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfaG9pc3RlZF8zLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGgxPnt7dG9waWN9fTwvaDE+ICIpLCAkZGF0YS5xdWVzdGlvbnNMb2FkZWQgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzQsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9RdWVzdGlvbiwgewogICAgY29udGVudDogJGRhdGEucXVlc3Rpb24sCiAgICByZWY6ICJxdWVzdGlvbiIsCiAgICBvbkZhaWxlZDogJG9wdGlvbnMuZmFpbGVkLAogICAgb25Tb2x2ZWQ6ICRvcHRpb25zLnNvbHZlZCwKICAgIG9uTmV4dDogJG9wdGlvbnMubmV4dAogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJjb250ZW50IiwgIm9uRmFpbGVkIiwgIm9uU29sdmVkIiwgIm9uTmV4dCJdKV0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pOwp9"},{"version":3,"sources":["/Users/guiseppe/fun/online/tsunamicollege/frontend/src/views/Test.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;8BACT,YAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAAuB,IAAvB,EAAuB,CAAA;AAAA;AAAvB,C;;8BAGA,YAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAAiB,IAAjB,EAAiB,CAAA;AAAA;AAAjB,C;;;;;;;;uBAJF,YAAA,CAaM,KAbN,EAAA,UAAA,EAaM,CAZJ,UAYI,EATJ,UASI,EALJ,mBAAA,CAAA,sBAAA,CAKI,EAJO,KAAA,CAAA,e,kBAAX,YAAA,CAEM,KAFN,EAEM,UAFN,EAEM,CADJ,YAAA,CAA6F,mBAA7F,EAA6F;AAAlF,IAAA,OAAO,EAAE,KAAA,CAAA,QAAyE;AAA/D,IAAA,GAAG,EAAC,UAA2D;AAA/C,IAAA,QAAM,EAAE,QAAA,CAAA,MAAuC;AAA9B,IAAA,QAAM,EAAE,QAAA,CAAA,MAAsB;AAAb,IAAA,MAAI,EAAE,QAAA,CAAA;AAAO,GAA7F,E,IAAA,E;;AAAA,I,6CAAA,CACI,CAFN,C,qCAII,CAbN,C","sourcesContent":["<template>\n  <div class=\"test\">\n    <div class=\"face-image\">\n\n    </div>\n    <div class=\"face\">\n\n    </div>\n\n    <!-- <h1>{{topic}}</h1> -->\n    <div v-if=\"questionsLoaded\">\n      <Question :content=\"question\" ref=\"question\" @failed=\"failed\" @solved=\"solved\" @next=\"next\"/>\n    </div>\n\n  </div>\n\n\n</template>\n\n<script>\nimport Question from '../components/Question.vue'\nimport axios from 'axios'\nexport default {\n  name: 'Test',\n  components: {\n    Question\n  },\n  data(){\n    return {\n      questionsLoaded:false,\n      question:{},\n      data:[],\n      index:1,\n      topic:this.$route.params.id,\n\n      hist:[-1],\n      hakuna:[1],\n\n      diffscale:0.2,//how much does the difference in difficulty get accounted for\n      reward:1,\n      penalty:0.8,\n\n    }\n  },\n  mounted(){\n    console.log('hakuna: ',JSON.stringify(this.hakuna));\n    if (localStorage[this.topic]==null){\n      console.log(\"no data on topic \",this.topic);\n      localStorage[this.topic]=0\n    }else{\n      console.log(localStorage[this.topic])\n    }\n    console.log(\"skill level:\",localStorage[this.topic]);\n    var rating=Math.round(localStorage[this.topic])\n    console.log('hist: ',this.hist);\n    this.getNewQuestion(this.topic,rating)\n  },\n  methods:{\n\n    getTopicInfo(topic){\n      var data={\"op\":\"GETINFO\",\"topic\":topic,\"no\":0}\n      axios({method:\"POST\",url:\"/api/getTopicInfo\",data:data,headers:{\"content-type\":\"text/plain\"}}).then(result=>{\n        localStorage[topic+\"Info\"]=JSON.stringify(result.data);\n      })\n    },\n\n    getNewQuestion(topic,rating){\n      var data={'topic':topic,'rating':rating,'history':this.hist}\n      console.log('sending data:',data);\n      axios({method:'POST',url:'api/new',data:data,headers:{'content-type':'text/plain'}}).then(result =>{\n        this.question=result.data\n        this.questionsLoaded=true\n        console.log('receved question:',this.question);\n\n      }).catch(error=>{\n        console.log(error);\n      })\n    },\n    solved(){\n      console.log(\"difficulty:\",this.question.rating);\n      this.rating=parseFloat(localStorage[this.topic])\n      console.log(\"start rating:\",this.rating);\n      var difference=this.question.rating-this.rating\n      var change = Math.max(0,this.reward+difference*this.diffscale)\n      this.rating+=change\n      localStorage[this.topic]=this.rating\n      console.log(\"new rating\",this.rating);\n\n\n    },\n    failed(){\n      console.log('failed');\n      console.log('difficulty:',this.question.rating);\n      this.rating=parseFloat(localStorage[this.topic])\n      console.log('start rating:',this.rating);\n      var difference=this.question.rating=this.rating\n      var change = Math.max(0,this.penalty+difference*this.diffscale)\n      this.rating-=change\n      localStorage[this.topic]=this.rating\n      console.log('new rating:',this.rating);\n\n    },\n    resetSkill(){\n      localStorage[this.topic]=0\n    },\n\n\n    next(){\n      console.log(\"question:\", this.question);\n      console.log(\"id:\",this.question.id);\n      this.hist.push(this.question.id)\n      if (this.hist.length>10){\n        this.hist=this.hist.slice(-10)\n      }\n      console.log(\"history:\",this.hist);\n\n      console.log(\"skill level:\",localStorage[this.topic]);\n      var rating=Math.round(localStorage[this.topic])\n      // var hist = JSON.stringify(this.hist)\n      this.getNewQuestion(this.topic,rating)\n      this.$refs.question.start()\n    },\n\n  }\n}\n</script>\n"],"sourceRoot":""}]}
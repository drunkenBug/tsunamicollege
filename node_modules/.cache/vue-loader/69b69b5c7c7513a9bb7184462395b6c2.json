{"remainingRequest":"/home/fiero/fun/github_pages/bequally.1/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/fiero/fun/github_pages/bequally.1/src/components/Question.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/fiero/fun/github_pages/bequally.1/src/components/Question.vue","mtime":1613744621491},{"path":"/home/fiero/fun/github_pages/bequally.1/node_modules/babel-loader/lib/index.js","mtime":1612047698362},{"path":"/home/fiero/fun/github_pages/bequally.1/node_modules/cache-loader/dist/cjs.js","mtime":1612047698358},{"path":"/home/fiero/fun/github_pages/bequally.1/node_modules/vue-loader-v16/dist/index.js","mtime":1612047697898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgZXhwb3J0IGRlZmF1bHR7CiAgICBwcm9wczpbCiAgICAgICdjb250ZW50JywKICAgICAgJ2Fuc3dlcicKICAgIF0sCiAgICBkYXRhKCl7CiAgICAgIHJldHVybiB7CiAgICAgICAgcmVzdWx0OiIuLi4iLAogICAgICAgIGlucHV0OiIiCiAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOnsKICAgICAgZ28oKXsKICAgICAgICBpZiAodGhpcy5pbnB1dD09dGhpcy5jb250ZW50LnNvbHV0aW9uKXsKICAgICAgICAgIHRoaXMucmVzdWx0PXRoaXMuY29udGVudC5zb2x1dGlvbisiIGlzIGNvcnJlY3QhIgogICAgICAgICAgdGhpcy5pbnB1dD0iIgogICAgICAgICAgdGhpcy4kZW1pdCgnc29sdmVkJykKICAgICAgICB9ZWxzZXsKICAgICAgICAgIHRoaXMucmVzdWx0PSJmYWxzZSEiCiAgICAgICAgfQogICAgICB9LAogICAgICBvbkVudGVyKCl7CiAgICAgICAgY29uc29sZS5sb2coImVudGVyIikKICAgICAgICB0aGlzLmdvKCkKICAgICAgfSwKICAgICAgc3RhcnQoKXsKICAgICAgICB0aGlzLiRyZWZzLmlucHV0LmZvY3VzKCkKICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKXsKICAgICAgY29uc29sZS5sb2coImNyZWF0ZWQiKQogICAgfQogIH0K"},{"version":3,"sources":["/home/fiero/fun/github_pages/bequally.1/src/components/Question.vue"],"names":[],"mappings":";EAiBE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT;IACF,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC;QACF,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC;UACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB;MACF,CAAC;MACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACV,CAAC;MACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB;IACF,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB;EACF","file":"/home/fiero/fun/github_pages/bequally.1/src/components/Question.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"block\">\n    <div class=\"question\">\n      <h2>{{content.title}}</h2>\n      <input type=\"text\" v-model='input' ref=\"input\" @keyup.enter='onEnter'>\n      <button type=\"button\" name=\"button\" @click='go' >\n        <div class=\"go\">\n          GO\n        </div>\n      </button>\n      <p>{{result}}</p>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  export default{\n    props:[\n      'content',\n      'answer'\n    ],\n    data(){\n      return {\n        result:\"...\",\n        input:\"\"\n      }\n    },\n    methods:{\n      go(){\n        if (this.input==this.content.solution){\n          this.result=this.content.solution+\" is correct!\"\n          this.input=\"\"\n          this.$emit('solved')\n        }else{\n          this.result=\"false!\"\n        }\n      },\n      onEnter(){\n        console.log(\"enter\")\n        this.go()\n      },\n      start(){\n        this.$refs.input.focus()\n      }\n    },\n    created(){\n      console.log(\"created\")\n    }\n  }\n</script>\n\n<style>\n  .block{\n    background: white;\n    position:relative;\n    left:50%;\n    transform:translate(-50%,0);\n    padding:2rem;\n    border-radius:2rem;\n  }\n\n\n</style>\n"]}]}